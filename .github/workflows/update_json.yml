name: Update updateJson.json

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 1 * *"

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup git config
      run: |
        git config user.name "r-neuschulz"
        git config user.email "r-neuschulz@protonmail.com"
    
    - name: Pull latest changes
      run: |
        git pull origin main
    
    - name: Fetch latest release data
      id: get_release
      run: |
        latest_release=$(curl -s https://api.github.com/repos/r-neuschulz/BlockStuff/releases/latest)
        version=$(echo $latest_release | jq -r .tag_name)
        zip_url=$(echo $latest_release | jq -r '.assets[] | select(.name | endswith(".zip")).browser_download_url')
        changelog_url=$(echo $latest_release | jq -r .html_url)
        echo "version=$version" >> $GITHUB_ENV
        echo "zip_url=$zip_url" >> $GITHUB_ENV
        echo "changelog_url=$changelog_url" >> $GITHUB_ENV

    - name: Calculate versionCode
      id: calc_version_code
      run: |
        version=${{ env.version }}
        version_code=$(echo $version | sed -E 's/v([0-9]+)\.([0-9]+)/\1*100+\2/' | bc)
        echo "version_code=$version_code" >> $GITHUB_ENV
    
    - name: Update updateJson.json
      run: |
        echo '{
          "version": "'${{ env.version }}'",
          "versionCode": '${{ env.version_code }}',
          "zipUrl": "'${{ env.zip_url }}'",
          "changelog": "'${{ env.changelog_url }}'"
        }' > updateJson.json
    
    - name: Commit and Push Changes if Needed
      run: |
        if ! git diff --quiet; then
          git add updateJson.json
          git commit -m "ðŸ”„ Automatic Update of updateJson.json"
          git push origin main --force
        else
          echo "No changes to commit"
        fi
