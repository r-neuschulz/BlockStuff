name: Update Status Check

on:
  workflow_run:
    workflows: ["Update updateJson.json"]
    types:
      - completed

jobs:
  check-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Fetch create_release workflow status
        id: create_release
        run: |
          RESPONSE=$(gh api repos/${{ github.repository }}/actions/workflows/create_release.yml/runs)
          echo "API Response for create_release: $RESPONSE"
          STATUS=$(echo "$RESPONSE" | jq -r '.workflow_runs[0].conclusion')
          echo "::set-output name=status::$STATUS"

      - name: Fetch pull_hosts workflow status
        id: pull_hosts
        run: |
          RESPONSE=$(gh api repos/${{ github.repository }}/actions/workflows/pull_hosts.yml/runs)
          echo "API Response for pull_hosts: $RESPONSE"
          STATUS=$(echo "$RESPONSE" | jq -r '.workflow_runs[0].conclusion')
          echo "::set-output name=status::$STATUS"

      - name: Fetch update_json workflow status
        id: update_json
        run: |
          RESPONSE=$(gh api repos/${{ github.repository }}/actions/workflows/update_json.yml/runs)
          echo "API Response for update_json: $RESPONSE"
          STATUS=$(echo "$RESPONSE" | jq -r '.workflow_runs[0].conclusion')
          echo "::set-output name=status::$STATUS"

      - name: Determine composite status
        id: composite_status
        run: |
          if [ "${{ steps.create_release.outputs.status }}" != "success" ] || [ "${{ steps.pull_hosts.outputs.status }}" != "success" ] || [ "${{ steps.update_json.outputs.status }}" != "success" ]; then
            echo "failing" > status.txt
          else
            echo "passing" > status.txt
          fi
          cat status.txt
          
      - name: Commit and push status if changed
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          if ! git diff --exit-code status.txt; then
            git add status.txt
            git commit -m "ðŸ“— Automatic Update Status"
            git push
          else
            echo "No changes to commit."
          fi
        
