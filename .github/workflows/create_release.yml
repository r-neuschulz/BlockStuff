name: Create Release Bundle

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 1,15 * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create Temp Folder
        run: mkdir downloads

      - name: List Directory Contents
        run: ls -la

      - name: Change to Downloads Directory
        run: cd downloads

      - name: Fetch Latest Version of BlockStuff
        run: |
          fileVersion=$(curl -s "https://api.github.com/repos/r-neuschulz/BlockStuff/tags" | jq -r '.[0].name')
          echo $fileVersion
          echo "fileVersion=${fileVersion}" >> $GITHUB_ENV

      - name: Set File Variables
        run: |
          fileName="BlockStuff-${{ env.fileVersion }}.zip"
          fileURL="https://github.com/r-neuschulz/BlockStuff/releases/download/${{ env.fileVersion }}/${fileName}"
          echo $fileName
          echo $fileURL
          echo "fileName=${fileName}" >> $GITHUB_ENV
          echo "fileURL=${fileURL}" >> $GITHUB_ENV

      - name: Download BlockStuff Zip
        run: wget -q ${{ env.fileURL }}

      - name: Unzip BlockStuff
        run: unzip -d ZIP ${{ env.fileName }}

      - name: Download Hosts File
        run: wget -q https://raw.githubusercontent.com/r-neuschulz/BlockStuff/master/hosts

      - name: Copy Hosts File to ZIP
        run: cp -u hosts ZIP/system/etc/

      - name: Clean Up Hosts and Zip Files
        run: |
          rm hosts
          rm ${{ env.fileName }}

      - name: Change to ZIP Directory
        run: cd ZIP

      - name: Extract Current Version Components
        run: |
          currentVersion=${{ env.fileVersion }}
          major=$(echo "$currentVersion" | awk -F'.' '{print substr($1,2)}')
          minor=$(echo "$currentVersion" | awk -F'.' '{print $2}')
          echo $major
          echo $minor
          echo "major=${major}" >> $GITHUB_ENV
          echo "minor=${minor}" >> $GITHUB_ENV

      - name: Increment Version Number
        run: |
          minor=${{ env.minor }}
          major=${{ env.major }}
          minor=$((minor + 1))
          if [ "$minor" -eq 100 ]; then
            minor=0
            major=$((major + 1))
          fi
          newVersion="v${major}.${minor}"
          echo $newVersion
          echo "newVersion=${newVersion}" >> $GITHUB_ENV

      - name: Create module.prop File
        run: |
          echo "id=blockstuff
          name=BlockStuff
          version=${{ env.newVersion }}
          versionCode=7
          author=r-neuschulz
          description=ðŸ¦¾ Let's block this sh*t" > module.prop

      - name: Zip the New Version
        run: zip -r BlockStuff-${{ env.newVersion }}.zip *

      - name: Move Zip to Temp Directory
        run: |
          mkdir temp
          mv BlockStuff-${{ env.newVersion }}.zip temp

      - name: Indicate Build Completion
        run: echo "Build Done"

      - name: Set New Version Environment Variable
        run: echo newVersion=${{ env.newVersion }} >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.newVersion }}
          release_name: BlockStuff Module
          body: |
            # Changelog
            - Updated Hosts File
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ZIP/temp/BlockStuff-${{ env.newVersion }}.zip
          asset_name: BlockStuff-${{ env.newVersion }}.zip
          asset_content_type: application/zip
